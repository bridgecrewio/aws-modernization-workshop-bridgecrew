<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Module 2 on Cloud DevSecOps with Bridgecrew</title><link>/aws-modernization-workshop-bridgecrew/20_module_two.html</link><description>Recent content in Module 2 on Cloud DevSecOps with Bridgecrew</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="/aws-modernization-workshop-bridgecrew/20_module_two/index.xml" rel="self" type="application/rss+xml"/><item><title>CloudFormation repository setup</title><link>/aws-modernization-workshop-bridgecrew/20_module_two/2001_automating_iac_github.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/aws-modernization-workshop-bridgecrew/20_module_two/2001_automating_iac_github.html</guid><description>Creating your own CfnGoat repository on GitHub To set up our continuous workflow and demonstrate the value of getting automated infrastructure security scanning, we need a hosted source repository. You can either push your local demo repository to GitHub or, since CfnGoat is already hosted on GitHub, we recommend you fork the repository to your own GitHub account.
Head to your GitHub account, visit the CfnGoat repository at https://github.com/bridgecrewio/cfngoat, and select Fork in the top right-hand corner:</description></item><item><title>AWS CodeBuild setup</title><link>/aws-modernization-workshop-bridgecrew/20_module_two/2002_automating_iac_codebuild.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/aws-modernization-workshop-bridgecrew/20_module_two/2002_automating_iac_codebuild.html</guid><description>Setting up AWS CodeBuild for our CloudFormation repository. AWS CodeBuild paired with AWS CodePipeline is a CI/CD platform that can build projects, run jobs, and deploy infrastructure. We’re going to use it to scan the CloudFormation templates before deployment, allowing us to fail the build job and halt a deployment if there are any security violations in our CloudFormation code.
We’ll also automatically send the results to Brigecrew to maintain a view across all of our infrastructure projects and share visibility throughout our organization.</description></item><item><title>Edit IAM for CodeBuild</title><link>/aws-modernization-workshop-bridgecrew/20_module_two/2003_automating_iac_codebuild_iam.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/aws-modernization-workshop-bridgecrew/20_module_two/2003_automating_iac_codebuild_iam.html</guid><description>Edit AWS IAM permissions to enable CodeBuild To give CodeBuild access to our Bridgecrew API secret we stored in AWS System Manager, we’ll need to add more permissions to the default IAM role created for new CodeBuild environments.
In the AWS IAM Dashboard, find the role called codebuild-bridgecrew-tutorial-service-role
Select the role, then click select Add Inline Policy from the right hand side.
This will bring up the &amp;ldquo;create policy visual editor&amp;rdquo;, for Service, select Systems Manager in the search box, then chose the GetParameters and GetParameter Actions.</description></item><item><title>AWS CodePipeline Setup</title><link>/aws-modernization-workshop-bridgecrew/20_module_two/2004_automating_iac_codepipeline.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/aws-modernization-workshop-bridgecrew/20_module_two/2004_automating_iac_codepipeline.html</guid><description>Setting up AWS CodePipeline to automatically trigger scans To trigger CodeBuild to run the scan automatically on each new commit in your CfnGoat GitHub repository, we’ll need to configure AWS CodePipeline. You can skip this step, but if you do, you’ll only be able to run manual scans from the CodeBuild UI, AWS CLI, or APIs, which doesn’t provide the DevSecOps automation we’re looking for!
To set it up, go to AWS CodePipeline and select Create Pipeline:</description></item><item><title>Pipeline Results</title><link>/aws-modernization-workshop-bridgecrew/20_module_two/2005_automating_iac_results.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/aws-modernization-workshop-bridgecrew/20_module_two/2005_automating_iac_results.html</guid><description>Reviewing our pipeline results Your new CodePipeline will immediatley start running your CodeBuild job against the latest commit in your GFNGoat Repository.
You will be taken to the Pipeline Jobs page where you will see the progress as CodeBuild checks out the latest commit from GitHub and starts our job to run Bridgecrew against the CloudFormation configuration.
Below we see the Pipeline sucessfully created and starting to run:
If everything goes as intended, the pipeline should fail at the build stage since the CfnGoat code is purposely designed with security flaws.</description></item></channel></rss>