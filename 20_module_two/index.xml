<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Two | Automating detection and enforcement on Cloud DevSecOps with Bridgecrew</title><link>/20_module_two.html</link><description>Recent content in Two | Automating detection and enforcement on Cloud DevSecOps with Bridgecrew</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="/20_module_two/index.xml" rel="self" type="application/rss+xml"/><item><title>Fork your own CFNGoat</title><link>/20_module_two/2001_automating_iac_github.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/20_module_two/2001_automating_iac_github.html</guid><description>Create your own CFNGoat fork on Github Since CFNGoat is already hosted on github, lets create our own fork so we can make changes and integrate our automated pipeline.
Visit the CFNGoat repo at (https://github.com/bridgecrewio/cfngoat)
Login to github.com if you are not already authenticated, and click the Fork button for the CFNGoat repository.
If you have multiple organisations, github will ask which of your orgs to fork into, chose your personal account (your username in the list) to fork the repo.</description></item><item><title>Setup AWS Codebuild</title><link>/20_module_two/2002_automating_iac_codebuild.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/20_module_two/2002_automating_iac_codebuild.html</guid><description>Setup AWS CodeBuild for our CFNGoat fork. AWS CodeBuild, paired with AWS CodePipeline is a CI/CD platform that can build projects, run jobs, and deploy infrastructure. We’re going to use it to scan the CloudFormation templates before deployment, allowing us to fail the build job and halt a deployment if there are any security violations in our CloudFormation code.
We&amp;rsquo;ll also send the results to the Brigecrew dashboard automatically, in order to maintain a view across all of our infrastructure projects and share visability throughout our organisation.</description></item><item><title>Edit IAM for Codebuild</title><link>/20_module_two/2003_automating_iac_codebuild_iam.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/20_module_two/2003_automating_iac_codebuild_iam.html</guid><description>Edit AWS IAM permissions to enable CodeBuild CodeBuild creates an IAM role for running builds, however, we need CodeBuild to access our Bridgecrew API secret we stored in system manager, so we&amp;rsquo;ll need to add some more permissions to the IAM role.
In the AWS IAM Dashboard, find the role, it will be called codebuild-bridgecrew-tutorial-service-role unless you renamed the CodeBuild project we&amp;rsquo;ve just set up.
Select the role, then click select Add Inline Policy from the right hand side (it&amp;rsquo;s a text link, not a button, so not the easiest thing to spot!</description></item><item><title>Setup AWS CodePipeline</title><link>/20_module_two/2004_automating_iac_codepipeline.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/20_module_two/2004_automating_iac_codepipeline.html</guid><description>Setting up CodePipeline to automatically trigger scans If you want CodeBuild to run the scan automatically on each new commit in your CFNGoat Github repository, you’ll need to configure AWS CodePipeline. You can skip this step, but if you do, you’ll only be able to run manual scans from the CodeBuild UI, AWS CLI, or API&amp;rsquo;s, which doesn&amp;rsquo;t provide us the DevSecOps automation we&amp;rsquo;re looking for!
To set it up, go to AWS CodePipeline and select Create Pipeline:</description></item><item><title>Pipeline Results</title><link>/20_module_two/2005_automating_iac_results.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/20_module_two/2005_automating_iac_results.html</guid><description>Viewing our Pipeline results and Security Posture. Our new CodePipeline will immediatley start running our CodeBuild job against the latest commit in our GFNGoat Repository.
You will be taken to the Pipeline Jobs page, where you will see the progress as CodeBuild checks out the latest commit from Github, then starts our job to run Bridgecrew against the CloudFormation.
If everything goes well, the pipeline should fail at the build stage.</description></item></channel></rss>