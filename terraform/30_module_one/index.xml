<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Module - Scan on Cloud DevSecOps workshop with Bridgecrew</title>
    <link>/terraform/30_module_one.html</link>
    <description>Recent content in Module - Scan on Cloud DevSecOps workshop with Bridgecrew</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="/terraform/30_module_one/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TerraGoat</title>
      <link>/terraform/30_module_one/1001_terragoat.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/terraform/30_module_one/1001_terragoat.html</guid>
      <description>Vulnerable-by-design demo repository setup This workshop uses our vulnerable-by-design Terraform project, TerraGoat, so that you can scan and automate infrastructure code without the added friction of integrating your own code. Simply clone the open-source project’s repository:
git clone https://github.com/bridgecrewio/terragoat.git cd terragoat git status Sample output
$ git clone https://github.com/bridgecrewio/terragoat.git cd terragoat git status Cloning into &amp;#39;terragoat&amp;#39;... remote: Enumerating objects: 10, done. remote: Counting objects: 100% (10/10), done. remote: Compressing objects: 100% (10/10), done.</description>
    </item>
    
    <item>
      <title>Checkov</title>
      <link>/terraform/30_module_one/1002_local_scan_cli.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/terraform/30_module_one/1002_local_scan_cli.html</guid>
      <description>Run Checkov locally To demonstrate what kinds of security and compliance errors Bridgecrew can identify in Terraform templates, start by using Checkov and send the results to the Bridgecrew platform.
Make sure you are in the cloned directory from the previous step, copy your unique Bridgecrew API token, and scan the s3.tf in the aws directory:
cd terragoat checkov -f terraform/aws/s3.tf --bc-api-key $YOUR_BC_API_KEY --repo-id bridgecrewio/s3 You can also scan entire directories with -d , such as the aws directory:</description>
    </item>
    
    <item>
      <title>Bridgecrew Dashboard</title>
      <link>/terraform/30_module_one/1003_local_scan_dashboard.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/terraform/30_module_one/1003_local_scan_dashboard.html</guid>
      <description>Viewing results in Bridgecrew You just scanned your Terraform templates locally using Checkov. If you included your API key, the results were sent to the Bridgecrew platform for investigation and remediation. You may have noticed the URL at the end of the CLI scan. That’s a direct link to the results in Bridgecrew.
Click on that link to bring up that scan’s Code Review page. This is a list of all of the misconfigurations identified from that scan grouped by resource and labeled by severity.</description>
    </item>
    
    <item>
      <title>VS Code Plugin</title>
      <link>/terraform/30_module_one/1004_vs_code.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/terraform/30_module_one/1004_vs_code.html</guid>
      <description>Run Checkov in your IDE You can get feedback directly in your integrated development environment (IDE) using Bridgecrew’s Checkov Visual Studio Code extension. The tool highlights misconfigurations inline and in development environments—like spell check for IaC misconfigurations.
First, you need to install the extension. In VS Code, go to Extensions and search for Checkov. Click Install.
Next, go to the Checkov Extension Settings and paste the API Token from the Bridgecrew platform that we saved earlier.</description>
    </item>
    
  </channel>
</rss>
